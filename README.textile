h1. Cuporter

Scrapes your feature files and shows scenarios per tag, with their context.  Formats HTML, CSV, and Pretty Text.

Consider this a stop-gap until we get this functionality in a proper cucumber formatter.

In version 0.2.0 and later you can number the Scenarios and Example rows with the @-n@ or @--numbers@ option.

---------
h3. Example Output: numbered pretty text

<pre>
@failing
   Feature: Abominable Aardvark
   1. Scenario: An Aardvark eats ants
   2. Scenario: Zee Zebra eats zee aardvark
   Feature: Wired
   3. Scenario: Everybody's Wired
      Scenario Outline: Why is everybody so wired?
         Examples: loosely wired
            | arg1 | arg2 |
   4.       | foo  | bar  |
   5.       | shif | fish |
         Examples: tightly wired
            | arg1  | arg2  |
   6.       | foo   | bar   |
   7.       | frotz | knurl |
   8. Scenario: Yellow lines
@ignore
   Feature: Wired
      Scenario Outline: Why is everybody so wired?
         Examples: tightly wired
            | arg1  | arg2  |
   1.       | foo   | bar   |
   2.       | frotz | knurl |
@wip
   Feature: HTML formatter
   1. Scenario: Everything in fixtures/self_test
   Feature: not everyone is involved
   2. Scenario: Failure is not an option, people
   Feature: sample
   3. Scenario: And yet another Example
   Feature: search examples
   4. Scenario: Generate PDF with pdf formatter

</pre>

---------

h3. Install

<pre>
  $ gem install cuporter
</pre>

---------

h3. Command Lines

h4. help

<pre>
  $ ./bin/cuporter -h

  Usage: cuporter [options]
  
      -i, --in DIR                     directory of *.feature files
  					Default: features/**/*.feature
  
          --input-file FILE            full file name with extension: 'path/to/file.feature'
  
      -o, --out FILE                   Output file path
  
      -f, --format [pretty|html|csv]   Output format
  					Default: pretty text

      -n, --numbers                    number scenarios and examples
</pre>

h4. run script directly

<pre>
  $ ./bin/cuporter -i fixtures/self_text                         # pretty-print demo report to stdout

  $ ./bin/cuporter -f html -o feature_tag_report.html            # default input features/**/*.feature to named output file

  $ ./bin/cuporter -f html --numbers -o feature_tag_report.html  # same, but number the scenarios and example rows
</pre>

h4. run via rake

<pre>
  $ rake cuporter:run["-i fixtures/self_text"]

  $ rake cuporter:run["-f html -o feature_tag_report.html"]
</pre>
