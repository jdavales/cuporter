#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../config', File.dirname(__FILE__))
$LOAD_PATH.unshift File.expand_path('../lib', File.dirname(__FILE__))
require 'configuration'
require 'cuporter'

report = Cuporter::ReportBase.create(Cuporter.options).build

Cuporter.options[:format].each do |format|
  (Cuporter.output_file(format) || STDOUT).puts case format
  when 'xml'
    report.doc.to_xml(:indent => 2, :encoding => 'UTF-8')
  when 'csv'
    report.doc.to_csv
  when 'text', 'pretty'
    report.doc.to_text
  when 'html'
    if Cuporter.options[:copy_public_assets]
      Cuporter::Document::Assets.copy(Cuporter.options[:output_file].first)
    end
    html = Cuporter::Document.new_html(Cuporter.options[:report],
                                       Cuporter.options[:link_assets], 
                                       Cuporter.options[:use_copied_public_assets])
    formatters = File.expand_path("../lib/cuporter/formatters", File.dirname(__FILE__))
    xslt = Nokogiri::XSLT(File.read("#{formatters}/xml_to_html.xslt"))
    html.add_report(xslt.transform(report.doc).at('.report'))
    html.to_html
  end
end

__END__
xsltproc --stringparam view feature lib/cuporter/formatters/xml_to_html.xslt new_feature.xml | ruby -e "f = STDIN.read; puts f.gsub(/\<\!--[\*\/]{2}--\>/, '')" | tee xslt_feature.html
